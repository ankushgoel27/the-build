<?xml version="1.0"?>

<!--
  @file boilerplate.xml
  the-build's environment-specific property loading, plus other core targets.

  Copyright 2016 Palantir.net, Inc.
  -->

<project name="boilerplate" default="status">
    <!--
      Include this file in your build.xml with:
        <import file="vendor/palantirnet/the-build/tasks/boilerplate.xml" />
      -->

    <taskdef name="includeresource" classname="TheBuild\IncludeResourceTask" />

    <!-- Uses the project directory name as the projectname -->
    <property name="build.dir" value="${application.startdir}" />
    <basename property="projectname" file="${build.dir}" suffix="local" />
    <resolvepath file="${phing.dir.boilerplate}/../" propertyName="build.thebuild.dir" />

    <!-- Uses an environment variable for the build.env, if available. -->
    <if>
        <isset property="env.PALANTIR_ENVIRONMENT" />
        <then>
            <property name="build.env" refid="env.PALANTIR_ENVIRONMENT" />
        </then>
    </if>

    <!-- If the command wasn't called with an environment, prompt for one. -->
    <propertyprompt propertyName="build.env" defaultValue="vagrant" promptText="Environment" promptCharacter=":" useExistingValue="true" />

    <if>
        <not><isset property="status.defaults_loaded" /></not>
        <then>
            <!-- Load properties for this environment, then for the default environment. -->
            <if>
                <available file="${build.dir}/.the-build/build.${build.env}.properties.yml" />
                <then>
                    <property file="${build.dir}/.the-build/build.${build.env}.properties.yml" />
                </then>
            </if>
            <property file="${build.dir}/.the-build/build.default.properties.yml" />
            <property file="${build.thebuild.dir}/defaults.properties.yml" />

            <property name="status.defaults_loaded" value="true" />
        </then>
    </if>


    <!--
        Default target: status
        -->
    <target name="status">
        <echo>Hello! I'm the-build.</echo>
    </target>


    <!-- Target: check-deploy-env -->
    <target name="check-deploy-env">
        <if>
            <or>
                <equals arg1="${build.env}" arg2="vagrant" />
                <equals arg1="${build.env}" arg2="default" />
            </or>
            <then>
                <echo level="error">Make sure you're running the deployment with a deploy environment!</echo>
                <fail message="Use a different build.env." />
            </then>
        </if>
    </target>


</project>
