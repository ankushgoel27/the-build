<?xml version="1.0"?>

<!--
  @file lib/db.xml
  Database tasks.

  @see defaults.properties.yml

  Copyright 2016, 2017, 2018 Palantir.net, Inc.
  -->

<project name="db" default="load-db">


    <!-- Target: load-db -->
    <target name="load-db" description="Load a database export.">
        <fail unless="build.dir" />
        <fail unless="db.load.export_pattern" />
        <fail unless="db.load.contents_command" />
        <fail unless="db.load.mysql_command" />


        <!-- Use the last listed file that matches the db.load.export_pattern property -->
        <exec dir="${build.dir}" command="ls ${db.load.export_pattern} | tail -1" outputProperty="db.load.discovered_file" />
        <!-- ... but respect db.load.file if it was already set. -->
        <property name="db.load.file" value="${db.load.discovered_file}" />


        <!-- Validate that we've found a file to load -->
        <if>
          <equals arg1="${db.load.file}" arg2="" />
          <then>
              <echo>Missing database export at '${db.load.export_pattern}'

Please download a database export to:
  ${db.load.export_pattern}

Alternatively, you can specify the export file prefix; for example:
  phing [YOUR-TARGET] -Ddb.load.export_pattern=artifacts/prod-*

Or, you can specify the export file directly:
  phing [YOUR-TARGET] -Ddb.load.file=artifacts/my_db.sql.gz
              </echo>
              <fail message="Missing database export." />
          </then>
        </if>


        <!-- Load the contents of the file into Drupal -->
        <property name="db.command" value="${build.dir}" command="${db.load.contents_command} ${db.load.file} | ${db.load.mysql_command}" />
        <echo>$> ${db.command}</echo>
        <exec dir="${build.dir}" command="${db.command}" checkreturn="true" logoutput="true" />
    </target>


</project>
