<?xml version="1.0"?>

<!--
  @file install.xml
  Targets for installing the-build templates into a project.

  Copyright 2016, 2017, 2018 Palantir.net, Inc.
  -->

<project name="install" default="install">


    <property name="build.dir" value="${application.startdir}" />
    <property name="build.env" value="default" />
    <basename property="projectname" file="${build.dir}" suffix="local" />
    <resolvepath file="${phing.dir.install}/../" propertyName="build.thebuild.dir" />


    <!-- Target: install -->
    <target name="install" description="Install the Phing build template into your project.">

        <!-- Copy the build file template.
             This doesn't do any property substitution except for the "project name",
             which is the name of the install directory.
             -->
        <copy file="${phing.dir.install}/../defaults/templates/the-build/build.xml" tofile="${application.startdir}/build.xml" overwrite="true">
            <filterchain>
                <replacetokens>
                    <token key="projectname" value="${projectname}" />
                </replacetokens>
            </filterchain>
        </copy>


        <!-- Configuration prompts.
             This creates the initial project properties file.
             -->
        <echo message="Configure the default environment..." />

        <property file="${build.thebuild.dir}/defaults.properties.yml" prefix="default" />
        <mkdir dir="${application.startdir}/.the-build" />

        <!-- Generate a hash salt for Drupal. -->
        <php expression="hash('sha256', print_r($_SERVER, TRUE))" returnProperty="hash_salt" />
        <property name="drupal.hash_salt" value="${hash_salt}" override="true" />

        <!-- Prompt for the Drupal root directory. -->
        <propertyprompt propertyName="drupal.root" defaultValue="${default.drupal.root}" promptText="Drupal root" promptCharacter=":" />

        <!-- Prompt for the Drupal URI. -->
        <propertyprompt propertyName="drupal.uri" defaultValue="${default.drupal.uri}" promptText="Drupal URI" promptCharacter=":" />

        <!-- Load the defaults into the global namespace, which won't overwrite the properties the user just set. -->
        <property file="${build.thebuild.dir}/defaults.properties.yml" />

        <!-- Create the default properties file. -->
        <copy file="${phing.dir.install}/../defaults/templates/the-build/build.default.properties.yml" tofile="${application.startdir}/.the-build/build.default.properties.yml" overwrite="true">
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <!-- Move the drupal root, if it's not 'web'. -->
        <if>
            <not><equals arg1="${drupal.root}" arg2="web" /></not>
            <then>
                <if>
                    <and>
                        <available file="${build.dir}/web" type="dir" />
                        <not><available file="${build.dir}/${drupal.root}" type="dir" /></not>
                    </and>
                    <then>
                        <echo msg="Moving the web/ directory to ${drupal.root}/" />
                        <move file="${build.dir}/web" tofile="${build.dir}/${drupal.root}" />
                    </then>
                </if>

                <echo msg="Editing your composer.json to install Drupal in ${drupal.root}/" />
                <reflexive>
                    <fileset dir="${build.dir}" includes="composer.json" />
                    <filterchain>
                        <replaceregexp>
                            <regexp pattern='"web/(core|modules|profiles|themes)' replace='"${drupal.root}/\1' />
                        </replaceregexp>
                    </filterchain>
                </reflexive>

                <echo msg="Updating your composer.lock hash." />
                <exec command="composer update --lock" logoutput="true" />
            </then>
        </if>

        <!-- Copy templates into place.
             These copy commands use <expandproperties /> for property substitution.
             -->
        <!-- Copy the behat template. -->
        <copy file="${phing.dir.install}/../defaults/templates/behat.yml" tofile="${application.startdir}/behat.yml" overwrite="true">
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <!-- Copy the CircleCI configuration -->
        <copy todir="${application.startdir}/" overwrite="true">
            <fileset dir="${phing.dir.install}/../defaults/templates" includes=".circleci/" />
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <!-- Copy the CircleCI properties. -->
        <copy file="${phing.dir.install}/../defaults/templates/the-build/build.circleci.properties.yml" tofile="${application.startdir}/.the-build/build.circleci.properties.yml" overwrite="true" />

        <!-- Copy Drupal configuration templates (mostly used by the 'build' target). -->
        <copy todir="${application.startdir}/.the-build">
            <fileset dir="${phing.dir.install}/../defaults/templates" includes="drupal.*" />
        </copy>

        <!-- Copy Drush configuration. -->
        <copy file="${phing.dir.install}/../defaults/templates/drushrc.php" tofile="${application.startdir}/drush/drushrc.php" overwrite="true">
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

    </target>

</project>
